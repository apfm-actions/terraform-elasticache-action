inputs:
  engine:
    description: 'Select between memcached or redis ElastiCache types'
    required: true
  engine_version:
    description: 'Specify engine version to use'
    required: false
  port:
    description: 'Specify port to listen on (default: redis=6370, memcached=11211)'
    required: false
  vpc_id:
    description: 'VPC ID to attach cluster to'
    required: false
  subnet_ids:
    description: 'Comma seperated of subnet ids to attach the cluster to'
    required: false
  node_type:
    description: 'AWS Instance type'
    default: 'cache.t2.micro'
  node_count:
    description: 'Number of nodes in cluster to create (memcached only)'
    default: 1
  maintenance_window:
    description: 'AWS Maintenance Window'
    default: 'sun:02:30-sun:03:30'
  plan:
    description: 'Perform terraform plan'
    default: true
  deploy:
    description: 'Perform terraform apply'
    default: true
  destroy:
    description: 'Perform terraform destroy'
    default: false
  debug:
    description: 'Enabling debugging'
    default: false

outputs:
  endpoint:
    description: 'Replication group leader in the form of "dnsname:port"'
  address:
    description: 'DNS Name of the replication group leader'
  port:
    description: 'TCP/IP port of the replication group leader'

runs:
  using: docker
  image: Dockerfile
